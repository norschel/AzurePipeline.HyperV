name: $(majorversion).$(minorversion).$(Rev:r)

resources:
- repo: self
  clean: true

pool:
  vmImage: 'windows-latest'

trigger:
- master

variables:
    majorversion: 8
    minorversion: 0
    PublisherID: 'Orschel'

jobs:
- job: BuildExtensionVariant
  displayName: "Build Azure DevOps extension variant"
  strategy: 
    maxParallel: 4
    matrix: 
      Preview_AzureDevOps:
        ExtensionName: 'Hyper-V (Preview)'
        ExtensionID: 'hyperv-preview'
        ExtensionCategory: 'Azure Pipelines'
        VsixFileSuffix: 'azurepipelines_preview'
        DropSuffix: 'Preview'
      Public_AzureDevOps:
        ExtensionName: 'Hyper-V'
        ExtensionID: 'hyperv'
        ExtensionCategory: 'Azure Pipelines'
        VsixFileSuffix: 'azurepipelines'
        DropSuffix: 'AzD'
    
  steps:
    - task: colinsalmcorner.colinsalmcorner-buildtasks.replace-tokens-task.ReplaceTokens@1
      displayName: 'Set Releasetype of HyperVServer task'
      inputs:
          sourcePath: src/HyperVServer
          filePattern: 'vss-extension.json'

    - powershell: |
        # Azure DevOps task module needs to be located side-by-side to the core script
        write-host "Create PS-Modules folder"
        $scriptFolder = "$(Build.SourcesDirectory)\src\HyperVServer\HyperVServer"
        $psModulesFolder = "$scriptFolder\ps_modules"
        mkdir $psModulesFolder
        write-host "Save VstsTaskSdk module into ps_modules folder"
        Save-Module -Name VstsTaskSdk -Path $psModulesFolder
        write-host "Copy VstsTaskSdk module near to the main script"
        $sdk = Get-ChildItem -Path $psModulesFolder -Recurse -Filter VstsTaskSdk.psm1
        write-host "Found module:"
        $sdk
        
        $from =$sdk.Directory.FullName
        $to = $scriptFolder

        write-host "Copy module from $from to $to :"
        Get-ChildItem -Path $from | % { 
          Copy-Item $_.fullname $to -Recurse -Force -verbose
        }
        ls $to

        Remove-Item -Path $from -Recurse -Force
      displayName: 'Add VstsTaskSdk PowerShell SDK'

      #- task: ToreGroneng.ToreGroneng-PSScriptAnalyzer-Task.PSScriptAnalyzer-Task.PowerShell Script Analyzer@1
      #  displayName: 'Execute PsScriptAnalyzer '
      #  inputs:
      #      PsFolder: src/HyperVServer/HyperVServer
      #      ExcludeRules: 'PSAvoidUsingWriteHost'
      #      Severity: 'Error,Warning'

    #- task: UseNode@1
    #  displayName: 'Use Node 10.x'
    #  inputs:
    #    version: 10.x

    - task: UseNode@1
      displayName: 'Use Node 20.x'
      inputs:
        version: 20.x

    - task: TfxInstaller@5
      displayName: 'Use Node CLI for Azure DevOps'
      inputs:
        version: '0.x'
        checkLatest: true

    - task: PackageAzureDevOpsExtension@5
      displayName: 'Package Extension - HyperV for Azure DevOps / Visual Studio Marketplace based deployment'
      inputs:
        rootFolder: src/HyperVServer
        outputPath: '$(build.artifactstagingdirectory)\Orschel.HyperV_$(majorversion).$(minorversion)_$(VsixFileSuffix).vsix'
        publisherId: '$(PublisherID)'
        extensionVersion: '$(Build.BuildNumber)'
        extensionId: '$(ExtensionID)'
        extensionName: '$(ExtensionName)'
        updateTasksVersion: true
        extensionVisibility: private

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Pipeline Artifact : Extension'
      inputs:
        artifact: Extension-$(DropSuffix)
        targetPath: '$(build.artifactstagingdirectory)'
        
